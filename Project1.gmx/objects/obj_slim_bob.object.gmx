<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_temp_slim_bob</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_hitable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step_size = random_range(0, rel_speed(8));
look_ahead = 4;
moving = false;
head_towards = 0;
armor = 2;
hp_max = 80;
hp = hp_max;
loaded = true;
load_time = 0;
load_speed = room_speed / 2;
damage_min = 12;
damage_max = 24;
move_speed = 4;
player = false;
player.number = 100;

health_y_offset = 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x -10, y-10 , obj_powerup_health);
instance_create(x, y , obj_powerup_health);
instance_create(x +10, y-10 , obj_powerup_health);
instance_create(x -10, y+10 , obj_powerup_health);
instance_create(x +10, y+10 , obj_powerup_health);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inst = instance_nearest(x, y, obj_minion_1);
if (inst) {
    mp_potential_step(inst.x, inst.y, step_size, false);
    head_towards = point_direction(x,y,inst.x,inst.y);

    var hit_towards_x = x + lengthdir_x(step_size * 2, head_towards);
    var hit_towards_y = y + lengthdir_y(step_size * 2, head_towards);
    
    if (load_time &lt; 0) {
        loaded = true;
    } else {
        load_time--;
    }
    
    var hurt_instance = collision_circle(hit_towards_x, hit_towards_y, 32, obj_hitable, true, true);
    if (hurt_instance) {
        if (loaded) {
                loaded = false;
                load_time = load_speed;
                var swipe = instance_create(x, y, obj_swipe);
                swipe.image_angle = head_towards;
                hurt_instance.hp -= random_range(damage_min, damage_max)/hurt_instance.armor;
                if (hurt_instance.hp &lt;= 0) {
                    with (hurt_instance) {
                        event_user(0);
                        particle_blood(hurt_instance.x, hurt_instance.y, 20, point_direction(x, y, hurt_instance.x, hurt_instance.y));
                        instance_destroy();
                    }
                } else {
                    particle_blood(hurt_instance.x, hurt_instance.y, 10, point_direction(x, y, hurt_instance.x, hurt_instance.y));
                }
                audio_play_sound(snd_hit, 1, false);
        }
    } else {
        var current_speed = move_speed;
        if (place_meeting(x, y, obj_slow)) {
            current_speed = move_speed / 2;
        }
        mp_potential_step(inst.x, inst.y, step_size, false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(x - 32, y+health_y_offset, x + 32, y+20, (hp / hp_max) * 100, c_red, c_red, c_green, 0, true, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>34,99</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
